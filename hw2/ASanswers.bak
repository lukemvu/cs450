(define (is-list? x)
  (if (null? x)
       #t
       (is-list? (cdr x))))

;(define (is-list? x)
;  (cond ((= (cdr x) '()) #t)
;        (else (is-list? '(cdr x)))))

(define a (list 1 2 3 4))
(define b (cons 2 4))
(define c (cons 5
                (cons 3
                      (cons 3 4))))